diff --git a/src/global/mail_params.c b/src/global/mail_params.c
index f5350a1..dc744cf 100644
--- a/src/global/mail_params.c
+++ b/src/global/mail_params.c
@@ -45,7 +45,7 @@
 /*	char	*var_double_bounce_sender;
 /*	int	var_line_limit;
 /*	char	*var_alias_db_map;
-/*	int	var_message_limit;
+/*	long	var_message_limit;
 /*	char	*var_mail_release;
 /*	char	*var_mail_version;
 /*	int	var_ipc_idle_limit;
@@ -230,7 +230,7 @@ char   *var_mynetworks;
 char   *var_double_bounce_sender;
 int     var_line_limit;
 char   *var_alias_db_map;
-int     var_message_limit;
+long    var_message_limit;
 char   *var_mail_release;
 char   *var_mail_version;
 int     var_ipc_idle_limit;
@@ -579,7 +579,6 @@ void    mail_params_init()
 	VAR_MAX_USE, DEF_MAX_USE, &var_use_limit, 1, 0,
 	VAR_DONT_REMOVE, DEF_DONT_REMOVE, &var_dont_remove, 0, 0,
 	VAR_LINE_LIMIT, DEF_LINE_LIMIT, &var_line_limit, 512, 0,
-	VAR_MESSAGE_LIMIT, DEF_MESSAGE_LIMIT, &var_message_limit, 0, 0,
 	VAR_HASH_QUEUE_DEPTH, DEF_HASH_QUEUE_DEPTH, &var_hash_queue_depth, 1, 0,
 	VAR_FORK_TRIES, DEF_FORK_TRIES, &var_fork_tries, 1, 0,
 	VAR_FLOCK_TRIES, DEF_FLOCK_TRIES, &var_flock_tries, 1, 0,
@@ -595,6 +594,10 @@ void    mail_params_init()
 	VAR_INET_WINDOW, DEF_INET_WINDOW, &var_inet_windowsize, 0, 0,
 	0,
     };
+    static const CONFIG_LONG_TABLE long_defaults[] = {
+	VAR_MESSAGE_LIMIT, DEF_MESSAGE_LIMIT, &var_message_limit, 0, 0,
+	0,
+    };
     static const CONFIG_TIME_TABLE time_defaults[] = {
 	VAR_EVENT_DRAIN, DEF_EVENT_DRAIN, &var_event_drain, 1, 0,
 	VAR_MAX_IDLE, DEF_MAX_IDLE, &var_idle_limit, 1, 0,
@@ -681,6 +684,7 @@ void    mail_params_init()
     }
 #endif
     get_mail_conf_int_table(other_int_defaults);
+    get_mail_conf_long_table(long_defaults);
     get_mail_conf_bool_table(bool_defaults);
     get_mail_conf_time_table(time_defaults);
     check_default_privs();
diff --git a/src/global/mail_params.h b/src/global/mail_params.h
index 5237f25..57015ee 100644
--- a/src/global/mail_params.h
+++ b/src/global/mail_params.h
@@ -560,7 +560,7 @@ extern char *var_mailbox_lock;
   */
 #define VAR_MAILBOX_LIMIT	"mailbox_size_limit"
 #define DEF_MAILBOX_LIMIT	(DEF_MESSAGE_LIMIT * 5)
-extern int var_mailbox_limit;
+extern long var_mailbox_limit;
 
  /*
   * Miscellaneous.
@@ -1753,7 +1753,7 @@ extern int var_virt_expan_limit;
   */
 #define VAR_MESSAGE_LIMIT	"message_size_limit"
 #define DEF_MESSAGE_LIMIT	10240000
-extern int var_message_limit;
+extern long var_message_limit;
 
 #define VAR_QUEUE_MINFREE	"queue_minfree"
 #define DEF_QUEUE_MINFREE	0
@@ -2289,7 +2289,7 @@ extern char *var_virt_mailbox_base;
 
 #define VAR_VIRT_MAILBOX_LIMIT		"virtual_mailbox_limit"
 #define DEF_VIRT_MAILBOX_LIMIT		(5 * DEF_MESSAGE_LIMIT)
-extern int var_virt_mailbox_limit;
+extern long var_virt_mailbox_limit;
 
 #define VAR_VIRT_MAILBOX_LOCK		"virtual_mailbox_lock"
 #define DEF_VIRT_MAILBOX_LOCK		"fcntl, dotlock"
diff --git a/src/local/local.c b/src/local/local.c
index fecd182..835d512 100644
--- a/src/local/local.c
+++ b/src/local/local.c
@@ -646,7 +646,7 @@ char   *var_deliver_hdr;
 int     var_stat_home_dir;
 int     var_mailtool_compat;
 char   *var_mailbox_lock;
-int     var_mailbox_limit;
+long    var_mailbox_limit;
 bool    var_frozen_delivered;
 bool    var_strict_mbox_owner;
 
@@ -867,6 +867,9 @@ int     main(int argc, char **argv)
     };
     static const CONFIG_INT_TABLE int_table[] = {
 	VAR_DUP_FILTER_LIMIT, DEF_DUP_FILTER_LIMIT, &var_dup_filter_limit, 0, 0,
+	0,
+    };
+    static const CONFIG_LONG_TABLE long_table[] = {
 	VAR_MAILBOX_LIMIT, DEF_MAILBOX_LIMIT, &var_mailbox_limit, 0, 0,
 	0,
     };
@@ -916,6 +919,7 @@ int     main(int argc, char **argv)
 
     single_server_main(argc, argv, local_service,
 		       MAIL_SERVER_INT_TABLE, int_table,
+		       MAIL_SERVER_LONG_TABLE, long_table,
 		       MAIL_SERVER_STR_TABLE, str_table,
 		       MAIL_SERVER_RAW_TABLE, raw_table,
 		       MAIL_SERVER_BOOL_TABLE, bool_table,
diff --git a/src/master/mail_server.h b/src/master/mail_server.h
index 57e0389..427d569 100644
--- a/src/master/mail_server.h
+++ b/src/master/mail_server.h
@@ -22,6 +22,7 @@
 #define MAIL_SERVER_TIME_TABLE	4
 #define MAIL_SERVER_RAW_TABLE	5
 #define MAIL_SERVER_NINT_TABLE	6
+#define MAIL_SERVER_LONG_TABLE	8
 
 #define	MAIL_SERVER_PRE_INIT	10
 #define MAIL_SERVER_POST_INIT	11
diff --git a/src/master/multi_server.c b/src/master/multi_server.c
index 2641dd3..ff2300b 100644
--- a/src/master/multi_server.c
+++ b/src/master/multi_server.c
@@ -47,6 +47,11 @@
 /*	global Postfix configuration file. Tables are loaded in the
 /*	order as specified, and multiple instances of the same type
 /*	are allowed.
+/* .IP "MAIL_SERVER_LONG_TABLE (CONFIG_LONG_TABLE *)"
+/*	A table with configurable parameters, to be loaded from the
+/*	global Postfix configuration file. Tables are loaded in the
+/*	order as specified, and multiple instances of the same type
+/*	are allowed.
 /* .IP "MAIL_SERVER_STR_TABLE (CONFIG_STR_TABLE *)"
 /*	A table with configurable parameters, to be loaded from the
 /*	global Postfix configuration file. Tables are loaded in the
@@ -652,6 +657,9 @@ NORETURN multi_server_main(int argc, char **argv, MULTI_SERVER_FN service,...)
 	case MAIL_SERVER_INT_TABLE:
 	    get_mail_conf_int_table(va_arg(ap, CONFIG_INT_TABLE *));
 	    break;
+	case MAIL_SERVER_LONG_TABLE:
+	    get_mail_conf_long_table(va_arg(ap, CONFIG_LONG_TABLE *));
+	    break;
 	case MAIL_SERVER_STR_TABLE:
 	    get_mail_conf_str_table(va_arg(ap, CONFIG_STR_TABLE *));
 	    break;
diff --git a/src/master/single_server.c b/src/master/single_server.c
index 99dfa21..1be2117 100644
--- a/src/master/single_server.c
+++ b/src/master/single_server.c
@@ -41,6 +41,11 @@
 /*	global Postfix configuration file. Tables are loaded in the
 /*	order as specified, and multiple instances of the same type
 /*	are allowed.
+/* .IP "MAIL_SERVER_LONG_TABLE (CONFIG_LONG_TABLE *)"
+/*	A table with configurable parameters, to be loaded from the
+/*	global Postfix configuration file. Tables are loaded in the
+/*	order as specified, and multiple instances of the same type
+/*	are allowed.
 /* .IP "MAIL_SERVER_STR_TABLE (CONFIG_STR_TABLE *)"
 /*	A table with configurable parameters, to be loaded from the
 /*	global Postfix configuration file. Tables are loaded in the
@@ -543,6 +548,9 @@ NORETURN single_server_main(int argc, char **argv, SINGLE_SERVER_FN service,...)
 	case MAIL_SERVER_INT_TABLE:
 	    get_mail_conf_int_table(va_arg(ap, CONFIG_INT_TABLE *));
 	    break;
+	case MAIL_SERVER_LONG_TABLE:
+	    get_mail_conf_long_table(va_arg(ap, CONFIG_LONG_TABLE *));
+	    break;
 	case MAIL_SERVER_STR_TABLE:
 	    get_mail_conf_str_table(va_arg(ap, CONFIG_STR_TABLE *));
 	    break;
diff --git a/src/master/trigger_server.c b/src/master/trigger_server.c
index 279ce2e..59b3ba5 100644
--- a/src/master/trigger_server.c
+++ b/src/master/trigger_server.c
@@ -48,6 +48,11 @@
 /*	global Postfix configuration file. Tables are loaded in the
 /*	order as specified, and multiple instances of the same type
 /*	are allowed.
+/* .IP "MAIL_SERVER_LONG_TABLE (CONFIG_LONG_TABLE *)"
+/*	A table with configurable parameters, to be loaded from the
+/*	global Postfix configuration file. Tables are loaded in the
+/*	order as specified, and multiple instances of the same type
+/*	are allowed.
 /* .IP "MAIL_SERVER_STR_TABLE (CONFIG_STR_TABLE *)"
 /*	A table with configurable parameters, to be loaded from the
 /*	global Postfix configuration file. Tables are loaded in the
@@ -554,6 +559,9 @@ NORETURN trigger_server_main(int argc, char **argv, TRIGGER_SERVER_FN service,..
 	case MAIL_SERVER_INT_TABLE:
 	    get_mail_conf_int_table(va_arg(ap, CONFIG_INT_TABLE *));
 	    break;
+	case MAIL_SERVER_LONG_TABLE:
+	    get_mail_conf_long_table(va_arg(ap, CONFIG_LONG_TABLE *));
+	    break;
 	case MAIL_SERVER_STR_TABLE:
 	    get_mail_conf_str_table(va_arg(ap, CONFIG_STR_TABLE *));
 	    break;
diff --git a/src/postconf/Makefile.in b/src/postconf/Makefile.in
index a91c9b9..d7b002f 100644
--- a/src/postconf/Makefile.in
+++ b/src/postconf/Makefile.in
@@ -8,7 +8,7 @@ CFLAGS	= $(DEBUG) $(OPT) $(DEFS)
 TESTPROG= 
 MAKES	= bool_table.h bool_vars.h int_table.h int_vars.h str_table.h \
 	str_vars.h time_table.h time_vars.h raw_table.h raw_vars.h \
-	nint_table.h nint_vars.h
+	nint_table.h nint_vars.h long_table.h long_vars.h
 AUTOS	= auto_table.h auto_vars.h
 PROG	= postconf
 SAMPLES	= ../../conf/main.cf.default
@@ -114,6 +114,8 @@ postconf.o: install_table.h
 postconf.o: install_vars.h
 postconf.o: int_table.h
 postconf.o: int_vars.h
+postconf.o: long_table.h
+postconf.o: long_vars.h
 postconf.o: postconf.c
 postconf.o: raw_table.h
 postconf.o: raw_vars.h
diff --git a/src/postconf/extract.awk b/src/postconf/extract.awk
index 4e0c690..942713e 100644
--- a/src/postconf/extract.awk
+++ b/src/postconf/extract.awk
@@ -66,6 +66,14 @@
 	}
     }
 }
+/^(static| )*(const +)?CONFIG_LONG_TABLE .*\{/,/\};/ { 
+    if ($1 ~ /VAR/) {
+	long_vars["long " substr($3,2,length($3)-2) ";"] = 1
+	if (++itab[$1 $2 $4 $5 $6 $7 $8 $9] == 1) {
+	    long_table[$0] = 1
+	}
+    }
+}
 
 END { 
     # Print parameter declarations without busting old AWK's file limit.
@@ -99,6 +107,11 @@ END {
 	print key
     print "EOF"
 
+    print "cat >long_vars.h <<'EOF'"
+    for (key in long_vars)
+	print key
+    print "EOF"
+
     # Print parameter initializations without busting old AWK's file limit.
     print "sed 's/[ 	][ 	]*/ /g' >int_table.h <<'EOF'"
     for (key in int_table)
@@ -130,6 +143,11 @@ END {
 	print key
     print "EOF"
 
+    print "sed 's/[ 	][ 	]*/ /g' >long_table.h <<'EOF'"
+    for (key in long_table)
+	print key
+    print "EOF"
+
     # Flush output nicely.
     exit(0);
 }
diff --git a/src/postconf/postconf.c b/src/postconf/postconf.c
index cebe6ca..41f71ca 100644
--- a/src/postconf/postconf.c
+++ b/src/postconf/postconf.c
@@ -317,6 +317,7 @@ DICT   *text_table;
 #include "str_vars.h"
 #include "raw_vars.h"
 #include "nint_vars.h"
+#include "long_vars.h"
 
  /*
   * Manually extracted.
@@ -359,6 +360,11 @@ static const CONFIG_NINT_TABLE nint_table[] = {
     0,
 };
 
+static const CONFIG_LONG_TABLE long_table[] = {
+#include "long_table.h"
+    0,
+};
+
  /*
   * Parameters with default values obtained via function calls.
   */
@@ -678,6 +684,7 @@ static void hash_parameters(void)
     const CONFIG_STR_FN_TABLE *csft;
     const CONFIG_RAW_TABLE *rst;
     const CONFIG_NINT_TABLE *nst;
+    const CONFIG_LONG_TABLE *lst;
 
     param_table = htable_create(100);
 
@@ -697,6 +704,8 @@ static void hash_parameters(void)
 	htable_enter(param_table, rst->name, (char *) rst);
     for (nst = nint_table; nst->name; nst++)
 	htable_enter(param_table, nst->name, (char *) nst);
+    for (lst = long_table; lst->name; lst++)
+	htable_enter(param_table, lst->name, (char *) lst);
 }
 
 /* show_strval - show string-valued parameter */
@@ -724,6 +733,17 @@ static void show_intval(int mode, const char *name, int value)
     }
 }
 
+/* show_longval - show long-valued parameter */
+
+static void show_longval(int mode, const char *name, long value)
+{
+    if (mode & SHOW_NAME) {
+	vstream_printf("%s = %ld\n", name, value);
+    } else {
+	vstream_printf("%ld\n", value);
+    }
+}
+
 /* print_bool - print boolean parameter */
 
 static void print_bool(int mode, CONFIG_BOOL_TABLE *cbt)
@@ -916,6 +936,29 @@ static void print_nint(int mode, CONFIG_NINT_TABLE * rst)
     }
 }
 
+/* print_long - print long parameter */
+
+static void print_long(int mode, CONFIG_LONG_TABLE *cit)
+{
+    const char *value;
+
+    if (mode & SHOW_DEFS) {
+	show_longval(mode, cit->name, cit->defval);
+    } else {
+	value = dict_lookup(CONFIG_DICT, cit->name);
+	if ((mode & SHOW_NONDEF) == 0) {
+	    if (value == 0) {
+		show_longval(mode, cit->name, cit->defval);
+	    } else {
+		show_strval(mode, cit->name, value);
+	    }
+	} else {
+	    if (value != 0)
+		show_strval(mode, cit->name, value);
+	}
+    }
+}
+
 /* print_parameter - show specific parameter */
 
 static void print_parameter(int mode, char *ptr)
@@ -942,6 +985,8 @@ static void print_parameter(int mode, char *ptr)
 	print_raw(mode, (CONFIG_RAW_TABLE *) ptr);
     if (INSIDE(ptr, nint_table))
 	print_nint(mode, (CONFIG_NINT_TABLE *) ptr);
+    if (INSIDE(ptr, long_table))
+	print_long(mode, (CONFIG_LONG_TABLE *) ptr);
     if (msg_verbose)
 	vstream_fflush(VSTREAM_OUT);
 }
diff --git a/src/virtual/virtual.c b/src/virtual/virtual.c
index 80d3bcf..950c363 100644
--- a/src/virtual/virtual.c
+++ b/src/virtual/virtual.c
@@ -331,7 +331,7 @@ char   *var_virt_gid_maps;
 int     var_virt_minimum_uid;
 char   *var_virt_mailbox_base;
 char   *var_virt_mailbox_lock;
-int     var_virt_mailbox_limit;
+long    var_virt_mailbox_limit;
 char   *var_mail_spool_dir;		/* XXX dependency fix */
 bool    var_strict_mbox_owner;
 
@@ -497,6 +497,9 @@ int     main(int argc, char **argv)
 {
     static const CONFIG_INT_TABLE int_table[] = {
 	VAR_VIRT_MINUID, DEF_VIRT_MINUID, &var_virt_minimum_uid, 1, 0,
+	0,
+    };
+    static const CONFIG_LONG_TABLE long_table[] = {
 	VAR_VIRT_MAILBOX_LIMIT, DEF_VIRT_MAILBOX_LIMIT, &var_virt_mailbox_limit, 0, 0,
 	0,
     };
@@ -521,6 +524,7 @@ int     main(int argc, char **argv)
 
     single_server_main(argc, argv, local_service,
 		       MAIL_SERVER_INT_TABLE, int_table,
+		       MAIL_SERVER_LONG_TABLE, long_table,
 		       MAIL_SERVER_STR_TABLE, str_table,
 		       MAIL_SERVER_BOOL_TABLE, bool_table,
 		       MAIL_SERVER_PRE_INIT, pre_init,
